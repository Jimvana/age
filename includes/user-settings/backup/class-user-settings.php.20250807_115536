<?php
/**
 * User Settings Class for Age Estimator Plugin
 * Handles frontend user settings panel
 */

// Exit if accessed directly
if (!defined('ABSPATH')) {
    exit;
}

class AgeEstimatorUserSettings {
    
    /**
     * Constructor
     */
    public function __construct() {
        // Register shortcode for settings panel
        add_shortcode('age_estimator_user_settings', array($this, 'render_settings_panel'));
        
        // Register AJAX handlers
        add_action('wp_ajax_age_estimator_save_user_settings', array($this, 'save_user_settings'));
        add_action('wp_ajax_age_estimator_validate_user_pin', array($this, 'validate_user_pin'));
        
        // Enqueue scripts for settings page
        add_action('wp_enqueue_scripts', array($this, 'enqueue_scripts'));
        
        // Register user meta fields
        add_action('show_user_profile', array($this, 'add_user_fields'));
        add_action('edit_user_profile', array($this, 'add_user_fields'));
        add_action('personal_options_update', array($this, 'save_user_fields'));
        add_action('edit_user_profile_update', array($this, 'save_user_fields'));
    }
    
    /**
     * Enqueue scripts and styles for user settings
     */
    public function enqueue_scripts() {
        global $post;
        
        // Only load on pages with our shortcode
        if (is_a($post, 'WP_Post') && has_shortcode($post->post_content, 'age_estimator_user_settings')) {
            wp_enqueue_style(
                'age-estimator-user-settings',
                AGE_ESTIMATOR_URL . 'css/user-settings.css',
                array(),
                AGE_ESTIMATOR_VERSION
            );
            
            wp_enqueue_script(
                'age-estimator-user-settings',
                AGE_ESTIMATOR_URL . 'js/user-settings.js',
                array('jquery'),
                AGE_ESTIMATOR_VERSION,
                true
            );
            
            // Localize script with needed data
            wp_localize_script('age-estimator-user-settings', 'ageEstimatorUserSettings', array(
                'ajaxUrl' => admin_url('admin-ajax.php'),
                'nonce' => wp_create_nonce('age_estimator_user_settings'),
                'messages' => array(
                    'saveSuccess' => __('Settings saved successfully!', 'age-estimator'),
                    'saveError' => __('Error saving settings. Please try again.', 'age-estimator'),
                    'pinRequired' => __('Please enter a 4-digit PIN.', 'age-estimator'),
                    'pinMismatch' => __('PIN confirmation does not match.', 'age-estimator')
                )
            ));
        }
    }
    
    /**
     * Render the settings panel shortcode
     */
    public function render_settings_panel($atts) {
        // Check if user is logged in
        if (!is_user_logged_in()) {
            return '<div class="age-estimator-notice notice-error">' . 
                   __('You must be logged in to access settings.', 'age-estimator') . 
                   '</div>';
        }
        
        $user_id = get_current_user_id();
        
        // Get current user settings
        $face_tracking_distance = get_user_meta($user_id, 'age_estimator_face_tracking_distance', true);
        $retail_mode_enabled = get_user_meta($user_id, 'age_estimator_retail_mode_enabled', true);
        $age_gating_enabled = get_user_meta($user_id, 'age_estimator_age_gating_enabled', true);
        $age_gating_threshold = get_user_meta($user_id, 'age_estimator_age_gating_threshold', true);
        
        // Set defaults if not set
        $face_tracking_distance = $face_tracking_distance ?: '0.4';
        $age_gating_threshold = $age_gating_threshold ?: '18';
        
        ob_start();
        ?>
        <div class="age-estimator-user-settings">
            <h2><?php _e('Age Estimator Settings', 'age-estimator'); ?></h2>
            
            <form id="age-estimator-user-settings-form">
                
                <!-- Face Tracking Settings -->
                <div class="settings-section">
                    <h3><?php _e('Face Tracking Settings', 'age-estimator'); ?></h3>
                    
                    <div class="setting-field">
                        <label for="face_tracking_distance">
                            <?php _e('Face Match Distance Threshold', 'age-estimator'); ?>
                            <span class="description"><?php _e('Lower values = stricter matching (0.3-0.6)', 'age-estimator'); ?></span>
                        </label>
                        <input type="number" 
                               id="face_tracking_distance" 
                               name="face_tracking_distance" 
                               value="<?php echo esc_attr($face_tracking_distance); ?>" 
                               min="0.1" 
                               max="1.0" 
                               step="0.1" />
                    </div>
                </div>
                
                <!-- Retail Mode Settings -->
                <div class="settings-section">
                    <h3><?php _e('Retail Mode (Challenge 25)', 'age-estimator'); ?></h3>
                    
                    <div class="setting-field">
                        <label>
                            <input type="checkbox" 
                                   id="retail_mode_enabled" 
                                   name="retail_mode_enabled" 
                                   value="1" 
                                   <?php checked($retail_mode_enabled, '1'); ?> />
                            <?php _e('Enable Retail Mode', 'age-estimator'); ?>
                            <span class="description"><?php _e('Activates Challenge 25 compliance features', 'age-estimator'); ?></span>
                        </label>
                    </div>
                    
                    <div class="retail-mode-settings" style="<?php echo $retail_mode_enabled ? '' : 'display:none;'; ?>">
                        <div class="setting-field">
                            <label for="retail_pin">
                                <?php _e('Personal Retail Mode PIN', 'age-estimator'); ?>
                                <span class="description"><?php _e('4-digit PIN for accessing retail mode', 'age-estimator'); ?></span>
                            </label>
                            <input type="password" 
                                   id="retail_pin" 
                                   name="retail_pin" 
                                   maxlength="4" 
                                   pattern="[0-9]{4}" 
                                   placeholder="****" />
                        </div>
                        
                        <div class="setting-field">
                            <label for="retail_pin_confirm">
                                <?php _e('Confirm PIN', 'age-estimator'); ?>
                            </label>
                            <input type="password" 
                                   id="retail_pin_confirm" 
                                   name="retail_pin_confirm" 
                                   maxlength="4" 
                                   pattern="[0-9]{4}" 
                                   placeholder="****" />
                        </div>
                    </div>
                </div>
                
                <!-- Age Gating Settings -->
                <div class="settings-section">
                    <h3><?php _e('Age Gating', 'age-estimator'); ?></h3>
                    
                    <div class="setting-field">
                        <label>
                            <input type="checkbox" 
                                   id="age_gating_enabled" 
                                   name="age_gating_enabled" 
                                   value="1" 
                                   <?php checked($age_gating_enabled, '1'); ?> />
                            <?php _e('Enable Age Gating', 'age-estimator'); ?>
                            <span class="description"><?php _e('Restrict access based on estimated age', 'age-estimator'); ?></span>
                        </label>
                    </div>
                    
                    <div class="age-gating-settings" style="<?php echo $age_gating_enabled ? '' : 'display:none;'; ?>">
                        <div class="setting-field">
                            <label for="age_gating_threshold">
                                <?php _e('Minimum Age', 'age-estimator'); ?>
                                <span class="description"><?php _e('Users must appear at least this age', 'age-estimator'); ?></span>
                            </label>
                            <input type="number" 
                                   id="age_gating_threshold" 
                                   name="age_gating_threshold" 
                                   value="<?php echo esc_attr($age_gating_threshold); ?>" 
                                   min="13" 
                                   max="25" />
                        </div>
                    </div>
                </div>
                
                <div class="settings-actions">
                    <button type="submit" class="button button-primary">
                        <?php _e('Save Settings', 'age-estimator'); ?>
                    </button>
                    <span class="spinner"></span>
                    <div class="settings-message"></div>
                </div>
            </form>
        </div>
        <?php
        
        return ob_get_clean();
    }
    
    /**
     * Save user settings via AJAX
     */
    public function save_user_settings() {
        // Verify nonce
        if (!wp_verify_nonce($_POST['nonce'], 'age_estimator_user_settings')) {
            wp_send_json_error('Invalid security token');
        }
        
        // Check if user is logged in
        if (!is_user_logged_in()) {
            wp_send_json_error('Not logged in');
        }
        
        $user_id = get_current_user_id();
        
        // Validate and save face tracking distance
        $face_tracking_distance = floatval($_POST['face_tracking_distance']);
        if ($face_tracking_distance >= 0.1 && $face_tracking_distance <= 1.0) {
            update_user_meta($user_id, 'age_estimator_face_tracking_distance', $face_tracking_distance);
        }
        
        // Save retail mode settings
        $retail_mode_enabled = isset($_POST['retail_mode_enabled']) ? '1' : '0';
        update_user_meta($user_id, 'age_estimator_retail_mode_enabled', $retail_mode_enabled);
        
        // Save retail PIN if provided and matches confirmation
        if ($retail_mode_enabled && !empty($_POST['retail_pin'])) {
            $pin = sanitize_text_field($_POST['retail_pin']);
            $pin_confirm = sanitize_text_field($_POST['retail_pin_confirm']);
            
            if ($pin === $pin_confirm && preg_match('/^[0-9]{4}$/', $pin)) {
                // Hash the PIN before storing
                $hashed_pin = wp_hash_password($pin);
                update_user_meta($user_id, 'age_estimator_retail_pin', $hashed_pin);
            } elseif ($pin !== $pin_confirm) {
                wp_send_json_error('PIN confirmation does not match');
            }
        }
        
        // Save age gating settings
        $age_gating_enabled = isset($_POST['age_gating_enabled']) ? '1' : '0';
        update_user_meta($user_id, 'age_estimator_age_gating_enabled', $age_gating_enabled);
        
        $age_gating_threshold = intval($_POST['age_gating_threshold']);
        if ($age_gating_threshold >= 13 && $age_gating_threshold <= 25) {
            update_user_meta($user_id, 'age_estimator_age_gating_threshold', $age_gating_threshold);
        }
        
        wp_send_json_success(array(
            'message' => __('Settings saved successfully!', 'age-estimator')
        ));
    }
    
    /**
     * Validate user PIN via AJAX
     */
    public function validate_user_pin() {
        // Verify nonce
        if (!wp_verify_nonce($_POST['nonce'], 'age_estimator_user_settings')) {
            wp_send_json_error('Invalid security token');
        }
        
        // Check if user is logged in
        if (!is_user_logged_in()) {
            wp_send_json_error('Not logged in');
        }
        
        $user_id = get_current_user_id();
        $entered_pin = sanitize_text_field($_POST['pin']);
        
        // Get stored hashed PIN
        $stored_pin = get_user_meta($user_id, 'age_estimator_retail_pin', true);
        
        if (empty($stored_pin)) {
            wp_send_json_error('No PIN set');
        }
        
        // Verify PIN
        if (wp_check_password($entered_pin, $stored_pin)) {
            wp_send_json_success(array(
                'valid' => true,
                'user_id' => $user_id
            ));
        } else {
            wp_send_json_error('Invalid PIN');
        }
    }
    
    /**
     * Add user fields to profile page (admin)
     */
    public function add_user_fields($user) {
        if (!current_user_can('edit_users')) {
            return;
        }
        ?>
        <h3><?php _e('Age Estimator Settings', 'age-estimator'); ?></h3>
        <table class="form-table">
            <tr>
                <th><label><?php _e('User Settings', 'age-estimator'); ?></label></th>
                <td>
                    <p class="description">
                        <?php 
                        printf(
                            __('Users can manage their Age Estimator settings on the %s page.', 'age-estimator'),
                            '<a href="' . home_url('/age-estimator-settings/') . '">' . __('frontend settings', 'age-estimator') . '</a>'
                        ); 
                        ?>
                    </p>
                </td>
            </tr>
        </table>
        <?php
    }
    
    /**
     * Save user fields (not used for frontend, but kept for consistency)
     */
    public function save_user_fields($user_id) {
        // Frontend handles its own saving
    }
}

// Initialize the class after init action
add_action('init', function() {
    new AgeEstimatorUserSettings();
}, 25);
